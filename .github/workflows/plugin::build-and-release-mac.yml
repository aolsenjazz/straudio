name: Build And Release

on:
  push:
    branches:
      - dev
    paths:
      - 'plugin/**'

jobs:
  build-release:
    runs-on: macos-latest
    permissions:
      contents: write
    env:
      APPLE_EMAIL: ${{ secrets.APPLE_EMAIL }}
      APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

    steps:
      - uses: actions/checkout@v4

      - name: Print Xcode version
        run: xcodebuild -version

      - name: Print notarytool version
        run: xcrun notarytool --version

      - name: Check out repository
        uses: actions/checkout@v3


      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Apple certificate, provisioning profile
        env:
          DEVELOPER_ID_APPLICATION_BASE64: ${{ secrets.DEVELOPER_ID_APPLICATION_BASE64 }}
          DEVELOPER_ID_INSTALLER_BASE64: ${{ secrets.DEVELOPER_ID_INSTALLER_BASE64 }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          DEVELOPER_ID_APPLICATION_CERT_PATH=$RUNNER_TEMP/application_cert.p12
          DEVELOPER_ID_INSTALLER_CERT_PATH=$RUNNER_TEMP/installer_cert.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$DEVELOPER_ID_APPLICATION_BASE64" | base64 --decode -o $DEVELOPER_ID_APPLICATION_CERT_PATH
          echo -n "$DEVELOPER_ID_INSTALLER_BASE64" | base64 --decode -o $DEVELOPER_ID_INSTALLER_CERT_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $DEVELOPER_ID_APPLICATION_CERT_PATH -P "$KEYCHAIN_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security import $DEVELOPER_ID_INSTALLER_CERT_PATH -P "$KEYCHAIN_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profilbuies
      - name: Init submodules, download dependencies
        run: |
          cd plugin

          git submodule init
          git submodule update

          cd iPlug2/Dependencies/IPlug
          ./download-iplug-sdks.sh

      - name: Build frontend
        run: |
          cd plugin-ui
          npm i
          npm run build

      - name: Build and sign VST3
        run: |
          cd plugin
          xcodebuild -workspace Straudio/Straudio.xcworkspace -scheme macOS-VST3

      - name: Build and sign AU
        run: |
          cd plugin
          xcodebuild -workspace Straudio/Straudio.xcworkspace -scheme macOS-AUv2
      
      - name: Build Release Artifacts
        run: |
          cd plugin/Straudio
          # Run your build script
          ./scripts/makedist-mac.sh