name: Build Release

on:
  push:
    branches:
      - dev
  schedule:
    - cron: '0 0 * * *'

# If CI ever becomes too cumbersome, revert to running this script more sparingly:
# on:
#   pull_request:
#     branches:
#       - main
#     paths:
#       - 'plugin/**'

jobs:
  build-release:
    runs-on: macos-latest
    env:
      APPLE_EMAIL: ${{ secrets.APPLE_EMAIL }}
      APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

    steps:
      - name: Print Xcode version
        run: xcodebuild -version

      - name: Print notarytool version
        run: xcrun notarytool --version

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Apple certificate, provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Init submodules, download dependencies
        run: |
          cd plugin

          git submodule init
          git submodule update

          cd iPlug2/Dependencies/IPlug
          ./download-iplug-sdks.sh

          # back to root
          cd ../../..

      - name: Build and sign VST3
        run: |
          cd plugin
          xcodebuild -workspace Straudio/Straudio.xcworkspace -scheme macOS-VST3

      - name: Build and sign AU
        run: |
          cd plugin
          xcodebuild -workspace Straudio/Straudio.xcworkspace -scheme macOS-AUv2
      
      - name: Build Release Image
        run: |
          cd plugin/Straudio
          # Run your build script
          ./scripts/makedist-mac.sh
